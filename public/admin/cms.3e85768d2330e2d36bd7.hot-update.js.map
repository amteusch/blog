{"version":3,"file":"cms.3e85768d2330e2d36bd7.hot-update.js","sources":["webpack:///./src/components/BlogPostTemplate.js","webpack:///./src/components/TagList.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { string2html } from '../utils/string2html';\nimport camelCase from '../utils/camelCase';\nimport { formatReadingTime } from '../utils/readingTime';\nimport TagList from './TagList';\n\nconst BlogPostTemplate = ({ meta, children }) => {\n  const content =\n    typeof children === 'string' ? string2html(children) : children;\n\n  return (\n    <main className=\"post\">\n      <article>\n        <section className=\"post__header\" role=\"contentinfo\">\n          <h1>{meta.title}</h1>\n          <span>\n            <time dateTime={meta.date}>{meta.date}</time>\n            {` â€¢ ${formatReadingTime(meta.words)}`}\n          </span>\n          {meta.tags && meta.tags.length > 0 && <TagList tags={meta.tags} />}\n        </section>\n\n        <section className=\"card post__body\">{content}</section>\n      </article>\n    </main>\n  );\n};\n\nexport default BlogPostTemplate;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport camelCase from '../utils/camelCase';\n\nconst TagList = ({ tag, tags }) => {\n  return (\n    <React.Fragment>\n      {tag && (\n        <h1 className=\"overview__title\">{`Selected tag: ${tag.toLowerCase()}`}</h1>\n      )}\n      <div className=\"tags tags--page\">\n        <ul className=\"tags\">\n          {tags.map((t, i) => (\n            <li key={i}>\n              <Link key={i} to={`/tags/${camelCase(t)}`}>\n                {t.toLowerCase()}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TagList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;;;;;;;;;;AAtBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AACA;AACA;AAAA;;;;;;;;;;AArBA;;;;;;;;;;;;;;A","sourceRoot":""}